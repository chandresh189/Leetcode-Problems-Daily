  
/**
Solution to Valid Square in Each Node at LeetCode in C++
author: chandresh189
ref: https://leetcode.com/problems/valid-square/
**/
class Solution {
public:
    long long int distance (int x1, int x2, int y1, int y2)
    {
        return pow(x2-x1,2)+pow(y2-y1,2);
    }
    bool validSquare(vector<int>& x, vector<int>& y, vector<int>& z, vector<int>& p) {
        bool flag;
        vector<int> dist(6);
        dist[0] = distance(x[0],y[0],x[1],y[1]);
        dist[1] = distance(y[0],z[0],y[1],z[1]);
        dist[2] = distance(z[0],p[0],z[1],p[1]);
        dist[3] = distance(p[0],x[0],p[1],x[1]);
        dist[4] = distance(x[0],z[0],x[1],z[1]);
        dist[5] = distance(p[0],y[0],p[1],y[1]);
        sort(dist.begin(),dist.end());
        return dist[0]>0 && dist[0]==dist[3] && dist[4]==dist[5];
    }
};
